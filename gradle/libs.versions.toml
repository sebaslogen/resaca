[versions]
agp = "8.13.0"
kotlin = '2.2.20'
ksp = '2.2.20-2.0.3'
compileSdk = '36'
targetSdk = '36'
minSdk = '23'
leakcanaryAndroid = '2.14'
coroutines = '1.10.2'
material = '1.13.0'
materialIconsExtended = "1.7.8"
core-ktx = '1.17.0'
navigation = '2.9.4'
navigation3 = "1.0.0-alpha09"
lifecycleViewmodelNav3 = "2.10.0-alpha03"
appcompat = '1.7.1'
constraintlayout = '2.2.1'
binary-compatibility-validator = '0.18.1'
dokka = '2.0.0'
maven = '0.34.0'
# Compose Multiplatform
compose-plugin = '1.9.0'
# Compose libs not included in multiplatform
compose-ui-test-junit = '1.9.1'
compose-ui-test-manifest = '1.9.1'
compose-ui-toolingPreview = '1.9.1'
# Compose integration with Activities
androidx-activity = '1.11.0'
# Compose integration with ViewModels
jetbrains-lifecycle = '2.9.3'
# Hilt
hilt = '2.57.1'
hilt-navigation-compose = '1.3.0'
# Koin
koin = '4.1.1'
# Test
junit-version = '4.13.2'
kover = '0.9.1'
robolectric-version = '4.16'
espresso = '3.7.0'
testRunner = '1.7.0'
testRules = '1.7.0'
junitKtx = '1.3.0'
tracing = '1.3.0'
kotlinxDatetime = "0.7.1"


[libraries]
# Android libraries
android-material = { module = 'com.google.android.material:material', version.ref = 'material' }
androidx-core-ktx = { module = 'androidx.core:core-ktx', version.ref = 'core-ktx' }
androidx-appcompat = { module = 'androidx.appcompat:appcompat', version.ref = 'appcompat' }
androidx-constraintlayout = { module = 'androidx.constraintlayout:constraintlayout', version.ref = 'constraintlayout' }
androidx-lifecycle-viewmodel = { module = 'org.jetbrains.androidx.lifecycle:lifecycle-viewmodel', version.ref = 'jetbrains-lifecycle' }
androidx-lifecycle-viewmodel-compose = { module = 'org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose', version.ref = 'jetbrains-lifecycle' }
androidx-lifecycle-runtime-compose = { module = 'org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose', version.ref = 'jetbrains-lifecycle' }
androidx-activity-compose = { module = 'androidx.activity:activity-compose', version.ref = 'androidx-activity' }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-navigation-compose = { module = 'androidx.navigation:navigation-compose', version.ref = 'navigation' }
androidx-tracing = { module = "androidx.tracing:tracing", version.ref = "tracing" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanaryAndroid" }

# Compose libraries
compose-ui-toolingPreview = { module = 'androidx.compose.ui:ui-tooling-preview', version.ref = 'compose-ui-toolingPreview' }
compose-ui-test-junit = { module = 'androidx.compose.ui:ui-test-junit4', version.ref = 'compose-ui-test-junit' }
compose-ui-test-manifest = { module = 'androidx.compose.ui:ui-test-manifest', version.ref = 'compose-ui-test-manifest' }

coroutines-core = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-core', version.ref = 'coroutines' }
coroutines-android = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-android', version.ref = 'coroutines' }
coroutines-swing = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-swing', version.ref = 'coroutines' }
kotlin-coroutines-test = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-test', version.ref = 'coroutines' }

# DI libraries
dagger-hilt = { module = 'com.google.dagger:hilt-android', version.ref = 'hilt' }
dagger-hilt-compiler = { module = 'com.google.dagger:hilt-compiler', version.ref = 'hilt' }
dagger-hilt-android-compiler = { module = 'com.google.dagger:hilt-android-compiler', version.ref = 'hilt' }
dagger-hilt-android-testing = { module = 'com.google.dagger:hilt-android-testing', version.ref = 'hilt' }
dagger-hilt-navigation-compose = { module = 'androidx.hilt:hilt-navigation-compose', version.ref = 'hilt-navigation-compose' }

koin-core = { module = 'io.insert-koin:koin-core', version.ref = 'koin' }
koin-core-viewmodel = { module = 'io.insert-koin:koin-core-viewmodel', version.ref = 'koin' }
koin-compose = { module = 'io.insert-koin:koin-compose', version.ref = 'koin' }
koin-android = { module = 'io.insert-koin:koin-android', version.ref = 'koin' }
koin-android-test = { module = 'io.insert-koin:koin-android-test', version.ref = 'koin' }

# Navigation 3 libs
androidx-lifecycle-viewmodel-navigation3 = { module = "androidx.lifecycle:lifecycle-viewmodel-navigation3", version.ref = "lifecycleViewmodelNav3" }
androidx-navigation3-runtime = { module = "androidx.navigation3:navigation3-runtime", version.ref = "navigation3" }
androidx-navigation3-ui = { module = "androidx.navigation3:navigation3-ui", version.ref = "navigation3" }

# Test libraries
junit = { module = 'junit:junit', version.ref = 'junit-version' }
robolectric = { module = 'org.robolectric:robolectric', version.ref = 'robolectric-version' }
espresso = { module = 'androidx.test.espresso:espresso-core', version.ref = 'espresso' }
test-runner = { module = 'androidx.test:runner', version.ref = 'testRunner' }
test-rules = { module = 'androidx.test:rules', version.ref = 'testRules' }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }


[plugins]
android-application = { id = 'com.android.application', version.ref = 'agp' }
android-library = { id = 'com.android.library', version.ref = 'agp' }
kotlin-android = { id = 'org.jetbrains.kotlin.android', version.ref = 'kotlin' }
ksp = { id = 'com.google.devtools.ksp', version.ref = 'ksp' }
dagger-hilt-android = { id = 'com.google.dagger.hilt.android', version.ref = 'hilt' }
binary-compatibility-validator = { id = 'org.jetbrains.kotlinx.binary-compatibility-validator', version.ref = 'binary-compatibility-validator' }
kover = { id = 'org.jetbrains.kotlinx.kover', version.ref = 'kover' }
dokka = { id = 'org.jetbrains.dokka', version.ref = 'dokka' }
maven = { id = 'com.vanniktech.maven.publish', version.ref = 'maven' }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
# Compose Multiplatform plugins
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
